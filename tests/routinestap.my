BEGIN;

SELECT tap.plan(36);
-- SELECT * from no_plan();

DROP DATABASE IF EXISTS taptest;
CREATE DATABASE taptest;

-- This will be rolled back. :-)
DROP TABLE IF EXISTS taptest.sometab;
CREATE TABLE taptest.sometab(
    id      INT NOT NULL PRIMARY KEY,
    name    TEXT DEFAULT '',
    numb    FLOAT(10, 2) DEFAULT NULL,
    myNum   INT(8) DEFAULT 24,
    myat    TIMESTAMP DEFAULT NOW(),
    plain   INT
);

DELIMITER //

DROP FUNCTION IF EXISTS taptest.myFunction  //
CREATE FUNCTION taptest.myFunction (param varchar(10) )
RETURNS int(10) 
BEGIN
    DECLARE ret int(10);
  
    SELECT 12 into ret;
    RETURN ret;
END //

DROP PROCEDURE IF EXISTS taptest.myProc //
CREATE PROCEDURE taptest.myProc ( param TEXT )
BEGIN
    SELECT * from taptest.sometab;
END //

DELIMITER ;


/****************************************************************************/
-- Test has_function

SELECT tap.check_test(
    tap.has_function('taptest', 'myFunction', '' ),
    true,
    'has_function( sch, func )',
    'Function taptest.myFunction should exist',
    '',
    ''
);

SELECT tap.check_test(
    tap.has_function('taptest', 'myFunction', 'desc' ),
    true,
    'has_function( sch, func, desc )',
    'desc',
    '',
    ''
);

SELECT tap.check_test(
    tap.has_function('taptest', 'myProc', '' ),
    false,
    'has_function( sch, non func, desc )',
    'Function taptest.myProc should exist',
    '',
    ''
);

/****************************************************************************/
-- Test hasnt_function

SELECT tap.check_test(
    tap.hasnt_function('taptest', 'myFunction', '' ),
    false,
    'hasnt_function( sch, func )',
    'Function taptest.myFunction should not exist',
    '',
    ''
);

SELECT tap.check_test(
    tap.hasnt_function('taptest', 'myFunction', 'desc' ),
    false,
    'hasnt_function( sch, func, desc )',
    'desc',
    '',
    ''
);

SELECT tap.check_test(
    tap.hasnt_function('taptest', 'myProc', '' ),
    true,
    'hasnt_function( sch, non func, desc )',
    'Function taptest.myProc should not exist',
    '',
    ''
);

/****************************************************************************/
-- Test has_procedure

SELECT tap.check_test(
    tap.has_procedure('taptest', 'myProc', '' ),
    true,
    'has_procedure( sch, func )',
    'Procedure taptest.myProc should exist',
    '',
    ''
);

SELECT tap.check_test(
    tap.has_procedure('taptest', 'myProc', 'desc' ),
    true,
    'has_procedure( sch, func, desc )',
    'desc',
    '',
    ''
);

SELECT tap.check_test(
    tap.has_procedure('taptest', 'myFunction', '' ),
    false,
    'has_procedure( sch, non func, desc )',
    'Procedure taptest.myFunction should exist',
    '',
    ''
);

/****************************************************************************/
-- Test hasnt_procedure

SELECT tap.check_test(
    tap.hasnt_procedure('taptest', 'myProc', '' ),
    false,
    'hasnt_procedure( sch, func )',
    'Procedure taptest.myProc should not exist',
    '',
    ''
);

SELECT tap.check_test(
    tap.hasnt_procedure('taptest', 'myProc', 'desc' ),
    false,
    'hasnt_procedure( sch, func, desc )',
    'desc',
    '',
    ''
);

SELECT tap.check_test(
    tap.hasnt_procedure('taptest', 'myFunction', '' ),
    true,
    'hasnt_procedure( sch, non func, desc )',
    'Procedure taptest.myFunction should not exist',
    '',
    ''
);

/****************************************************************************/
-- Finish the tests and clean up.
call tap.finish();
DROP DATABASE IF EXISTS taptest;

ROLLBACK;